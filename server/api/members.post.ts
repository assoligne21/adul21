import { z } from 'zod'
import { serverSupabaseServiceRole } from '../utils/supabase-compat.ts'

// Validation schema
const memberSchema = z.object({
  // Personal info
  civility: z.enum(['M.', 'Mme', 'Autre']),
  firstName: z.string().min(2).max(100),
  lastName: z.string().min(2).max(100),
  birthDate: z.string().optional(),
  email: z.string().email().max(255),
  phone: z.string().min(10).max(20),
  address: z.string().min(5),
  postalCode: z.string().min(4).max(10),
  city: z.enum(['Ledenon', 'Cabri√®res', 'Saint-Gervasy', 'Autre']),

  // User profile
  userType: z.enum(['student', 'parent', 'worker', 'senior', 'pmr', 'other']),
  schoolName: z.string().max(200).optional(),
  schoolSection: z.string().max(200).optional(),
  usageBefore: z.enum(['daily', '2-3_per_week', 'weekly', 'occasional', '']).optional(),
  usageAfter: z.enum(['car', 'correspondences', 'depends_on_someone', 'stopped', '']).optional(),

  // Membership
  membershipType: z.enum(['reduced', 'normal', 'support', 'custom']),
  membershipFee: z.number().min(5),

  // Engagement
  wantsToParticipate: z.boolean(),
  participationAreas: z.array(z.string()),
  acceptsNewsletter: z.boolean(),
  acceptsTestimonyPublication: z.boolean(),
  acceptsMediaContact: z.boolean(),
  acceptsActionSolicitation: z.boolean()
})

function getMembershipTypeLabel(type: string): string {
  const labels: Record<string, string> = {
    reduced: 'Tarif r√©duit',
    normal: 'Tarif normal',
    support: 'Tarif de soutien',
    custom: 'Montant libre'
  }
  return labels[type] || type
}

export default defineEventHandler(async (event) => {
  try {
    // Parse and validate request body
    const body = await readBody(event)
    const validatedData = memberSchema.parse(body)

    // Get Supabase client with service role
    const supabase = serverSupabaseServiceRole(event)

    // Check if email already exists
    const { data: existingMember } = await supabase
      .from('members')
      .select('id, email')
      .eq('email', validatedData.email)
      .single()

    if (existingMember) {
      throw createError({
        statusCode: 400,
        statusMessage: 'Un adh√©rent avec cet email existe d√©j√†'
      })
    }

    // Calculate membership end date (1 year from now)
    const membershipStartDate = new Date()
    const membershipEndDate = new Date()
    membershipEndDate.setFullYear(membershipEndDate.getFullYear() + 1)

    // Insert member
    const { data: member, error } = await supabase
      .from('members')
      .insert({
        civility: validatedData.civility,
        first_name: validatedData.firstName,
        last_name: validatedData.lastName,
        birth_date: validatedData.birthDate || null,
        email: validatedData.email,
        phone: validatedData.phone,
        address: validatedData.address,
        postal_code: validatedData.postalCode,
        city: validatedData.city,
        user_type: validatedData.userType,
        school_name: validatedData.schoolName || null,
        school_section: validatedData.schoolSection || null,
        usage_before: validatedData.usageBefore || null,
        usage_after: validatedData.usageAfter || null,
        membership_fee: validatedData.membershipFee,
        membership_type: validatedData.membershipType,
        membership_status: 'pending',
        membership_start_date: membershipStartDate.toISOString().split('T')[0],
        membership_end_date: membershipEndDate.toISOString().split('T')[0],
        payment_status: 'pending',
        wants_to_participate: validatedData.wantsToParticipate,
        participation_areas: validatedData.participationAreas,
        accepts_newsletter: validatedData.acceptsNewsletter,
        accepts_testimony_publication: validatedData.acceptsTestimonyPublication,
        accepts_media_contact: validatedData.acceptsMediaContact,
        accepts_action_solicitation: validatedData.acceptsActionSolicitation
      })
      .select()
      .single()

    if (error) {
      console.error('Supabase error:', error)
      throw createError({
        statusCode: 500,
        statusMessage: 'Erreur lors de l\'enregistrement de l\'adh√©sion'
      })
    }

    // Send notification to admin
    try {
      await sendEmail({
        to: 'assoligne21@gmail.com',
        subject: `[ADUL21] Nouvelle adh√©sion : ${validatedData.firstName} ${validatedData.lastName}`,
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%); color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
              .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }
              .info-box { background: white; border-left: 4px solid #2563eb; padding: 15px; margin: 15px 0; border-radius: 4px; }
              .amount-box { background: #fef3c7; border: 2px solid #f59e0b; padding: 20px; margin: 20px 0; border-radius: 8px; text-align: center; }
              .label { font-weight: bold; color: #2563eb; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h2 style="margin: 0;">Nouvelle demande d'adh√©sion</h2>
              </div>
              <div class="content">
                <div class="amount-box">
                  <div style="font-size: 36px; font-weight: bold; color: #92400e;">${validatedData.membershipFee}‚Ç¨</div>
                  <div style="color: #92400e; margin-top: 5px;">${getMembershipTypeLabel(validatedData.membershipType)}</div>
                </div>

                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">Informations personnelles</h3>
                  <p style="margin: 5px 0;"><span class="label">Nom :</span> ${validatedData.civility} ${validatedData.firstName} ${validatedData.lastName}</p>
                  <p style="margin: 5px 0;"><span class="label">Email :</span> <a href="mailto:${validatedData.email}">${validatedData.email}</a></p>
                  <p style="margin: 5px 0;"><span class="label">T√©l√©phone :</span> ${validatedData.phone}</p>
                  <p style="margin: 5px 0;"><span class="label">Adresse :</span> ${validatedData.address}, ${validatedData.postalCode} ${validatedData.city}</p>
                  ${validatedData.birthDate ? `<p style="margin: 5px 0;"><span class="label">Date de naissance :</span> ${new Date(validatedData.birthDate).toLocaleDateString('fr-FR')}</p>` : ''}
                </div>

                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">Profil d'usager</h3>
                  <p style="margin: 5px 0;"><span class="label">Type :</span> ${validatedData.userType}</p>
                  ${validatedData.schoolName ? `<p style="margin: 5px 0;"><span class="label">√âtablissement :</span> ${validatedData.schoolName}</p>` : ''}
                  ${validatedData.schoolSection ? `<p style="margin: 5px 0;"><span class="label">Fili√®re :</span> ${validatedData.schoolSection}</p>` : ''}
                  ${validatedData.usageBefore ? `<p style="margin: 5px 0;"><span class="label">Usage avant :</span> ${validatedData.usageBefore}</p>` : ''}
                  ${validatedData.usageAfter ? `<p style="margin: 5px 0;"><span class="label">Solution apr√®s :</span> ${validatedData.usageAfter}</p>` : ''}
                </div>

                ${validatedData.wantsToParticipate ? `
                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">Participation active</h3>
                  <p style="margin: 5px 0;">Domaines d'int√©r√™t :</p>
                  <ul style="margin: 10px 0;">
                    ${validatedData.participationAreas.map(area => `<li>${area}</li>`).join('')}
                  </ul>
                </div>
                ` : ''}

                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">Consentements</h3>
                  <ul style="margin: 10px 0; list-style: none; padding: 0;">
                    <li>‚úâÔ∏è Newsletter : ${validatedData.acceptsNewsletter ? '‚úÖ Oui' : '‚ùå Non'}</li>
                    <li>üìù Publication t√©moignage : ${validatedData.acceptsTestimonyPublication ? '‚úÖ Oui' : '‚ùå Non'}</li>
                    <li>üì∞ Contact m√©dia : ${validatedData.acceptsMediaContact ? '‚úÖ Oui' : '‚ùå Non'}</li>
                    <li>üéØ Sollicitations actions : ${validatedData.acceptsActionSolicitation ? '‚úÖ Oui' : '‚ùå Non'}</li>
                  </ul>
                </div>

                <p style="margin-top: 30px; font-size: 14px; color: #6b7280;">
                  üí° <strong>Action requise :</strong> En attente du r√®glement de ${validatedData.membershipFee}‚Ç¨ pour valider l'adh√©sion.
                </p>
              </div>
            </div>
          </body>
          </html>
        `
      })
    } catch (emailError) {
      // Log but don't fail
      console.error('Failed to send admin notification:', emailError)
    }

    // Send confirmation to member
    try {
      await sendEmail({
        to: validatedData.email,
        subject: 'Demande d\'adh√©sion re√ßue - ADUL21',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
              .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }
              .info-box { background: white; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0; border-radius: 4px; }
              .payment-box { background: #fef3c7; border: 2px solid #f59e0b; padding: 20px; margin: 20px 0; border-radius: 8px; }
              .footer { text-align: center; margin-top: 30px; font-size: 12px; color: #6b7280; }
              a { color: #2563eb; text-decoration: none; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1 style="margin: 0;">Bienvenue √† l'ADUL21 !</h1>
                <p style="margin: 10px 0 0 0;">Association de D√©fense des Usagers de la Ligne 21</p>
              </div>
              <div class="content">
                <h2>Demande d'adh√©sion bien re√ßue</h2>
                <p>Bonjour ${validatedData.firstName} ${validatedData.lastName},</p>
                <p>Nous avons bien re√ßu votre demande d'adh√©sion en tant que <strong>${getMembershipTypeLabel(validatedData.membershipType)}</strong>.</p>

                <div class="payment-box">
                  <h3 style="margin-top: 0; color: #92400e;">üí≥ R√®glement de la cotisation</h3>
                  <p style="margin: 0 0 15px 0; font-size: 24px; font-weight: bold; color: #92400e;">Montant : ${validatedData.membershipFee}‚Ç¨</p>

                  <div style="text-align: left;">
                    <p><strong>Modalit√©s de paiement :</strong></p>
                    <ul style="margin: 10px 0;">
                      <li><strong>Virement bancaire :</strong> IBAN et BIC seront communiqu√©s par email s√©par√©</li>
                      <li><strong>Ch√®que :</strong> √Ä l'ordre de "ADUL21" envoy√© √† l'adresse qui vous sera communiqu√©e</li>
                      <li><strong>Esp√®ces :</strong> Lors d'une r√©union de l'association</li>
                    </ul>
                  </div>

                  <p style="margin-top: 15px; font-size: 14px; color: #92400e;">
                    ‚ö†Ô∏è <strong>Important :</strong> Votre adh√©sion sera effective d√®s r√©ception du paiement.
                  </p>
                </div>

                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">Vos avantages adh√©rent</h3>
                  <ul style="margin: 10px 0;">
                    <li>‚úÖ Participation aux assembl√©es g√©n√©rales avec droit de vote</li>
                    <li>‚úÖ Acc√®s aux informations en avant-premi√®re</li>
                    <li>‚úÖ Contribution directe √† notre mobilisation juridique</li>
                    <li>‚úÖ Participation aux actions de mobilisation</li>
                    ${validatedData.wantsToParticipate ? '<li>‚úÖ Engagement actif dans les groupes de travail</li>' : ''}
                  </ul>
                </div>

                <div class="info-box">
                  <h3 style="margin-top: 0; color: #2563eb;">R√©capitulatif de votre adh√©sion</h3>
                  <p style="margin: 5px 0;"><strong>Type :</strong> ${getMembershipTypeLabel(validatedData.membershipType)}</p>
                  <p style="margin: 5px 0;"><strong>Montant :</strong> ${validatedData.membershipFee}‚Ç¨</p>
                  <p style="margin: 5px 0;"><strong>Dur√©e :</strong> 1 an (${membershipStartDate.toLocaleDateString('fr-FR')} - ${membershipEndDate.toLocaleDateString('fr-FR')})</p>
                  <p style="margin: 5px 0;"><strong>Statut :</strong> En attente de paiement</p>
                </div>

                <p>D√®s r√©ception de votre paiement, nous vous enverrons une confirmation et votre carte d'adh√©rent.</p>
                <p><strong>Merci de rejoindre notre combat pour r√©tablir la ligne 21 directe !</strong></p>
                <p>L'√©quipe ADUL21</p>
              </div>
              <div class="footer">
                <p>ADUL21 - Association de D√©fense des Usagers de la Ligne 21</p>
                <p>Email : <a href="mailto:assoligne21@gmail.com">assoligne21@gmail.com</a></p>
                <p>Site web : <a href="https://adul21.fr">adul21.fr</a></p>
              </div>
            </div>
          </body>
          </html>
        `,
        text: `
Bienvenue √† l'ADUL21 !

Bonjour ${validatedData.firstName} ${validatedData.lastName},

Nous avons bien re√ßu votre demande d'adh√©sion en tant que ${getMembershipTypeLabel(validatedData.membershipType)}.

R√àGLEMENT DE LA COTISATION
Montant : ${validatedData.membershipFee}‚Ç¨

Modalit√©s de paiement :
- Virement bancaire : IBAN et BIC seront communiqu√©s par email s√©par√©
- Ch√®que : √Ä l'ordre de "ADUL21"
- Esp√®ces : Lors d'une r√©union de l'association

‚ö†Ô∏è Votre adh√©sion sera effective d√®s r√©ception du paiement.

VOS AVANTAGES ADH√âRENT
‚úÖ Participation aux assembl√©es g√©n√©rales avec droit de vote
‚úÖ Acc√®s aux informations en avant-premi√®re
‚úÖ Contribution directe √† notre mobilisation juridique
‚úÖ Participation aux actions de mobilisation

R√âCAPITULATIF
Type : ${getMembershipTypeLabel(validatedData.membershipType)}
Montant : ${validatedData.membershipFee}‚Ç¨
Dur√©e : 1 an
Statut : En attente de paiement

Merci de rejoindre notre combat pour r√©tablir la ligne 21 directe !

L'√©quipe ADUL21
Email : assoligne21@gmail.com
Site web : https://adul21.fr
        `
      })
    } catch (emailError) {
      // Log but don't fail - admin was notified
      console.error('Failed to send member confirmation:', emailError)
    }

    return {
      success: true,
      message: 'Votre demande d\'adh√©sion a √©t√© enregistr√©e avec succ√®s',
      member: {
        id: member.id,
        created_at: member.created_at
      }
    }
  } catch (error: any) {
    console.error('Error processing membership:', error)

    if (error.name === 'ZodError') {
      throw createError({
        statusCode: 400,
        statusMessage: 'Donn√©es invalides',
        data: error.errors
      })
    }

    throw createError({
      statusCode: error.statusCode || 500,
      statusMessage: error.statusMessage || 'Une erreur est survenue lors de l\'enregistrement'
    })
  }
})
