version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: adul21-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-adul21}
      - POSTGRES_USER=${POSTGRES_USER:-adul21}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./supabase-schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - adul21-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-adul21} -d ${POSTGRES_DB:-adul21}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  adul21-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adul21-website
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Général
      - NODE_ENV=production
      - SITE_URL=${SITE_URL}

      # PostgreSQL
      - DATABASE_URL=postgresql://${POSTGRES_USER:-adul21}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-adul21}

      # Gmail SMTP
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_APP_PASSWORD=${GMAIL_APP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}

      # Auth
      - JWT_SECRET=${JWT_SECRET}

      # Analytics
      - PLAUSIBLE_DOMAIN=${PLAUSIBLE_DOMAIN}

      # Association status
      - ASSOCIATION_CREATED=${ASSOCIATION_CREATED:-false}
    networks:
      - adul21-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  adul21-network:
    driver: bridge

volumes:
  postgres-data:
